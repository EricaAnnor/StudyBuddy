services:
  web:
    build: .
    container_name: studyBuddyBackend
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./backend:/backend
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: generic_db
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo
    container_name: messages_db
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: |
        mongosh --host localhost:27017 --username $${MONGO_INITDB_ROOT_USERNAME} --password $${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --eval "db.adminCommand('ping')" --quiet || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
  
  redis:
    image: redis:7
    ports:
      - "6379:6379"


volumes:
  postgres_data:
  mongo_data:

